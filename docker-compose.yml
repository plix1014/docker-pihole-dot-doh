---
version: "3"

# More info at https://github.com/pi-hole/docker-pi-hole/
# and https://docs.pi-hole.net/
services:
  pihole:
    container_name: pihole
    image: ${pihole_image}
    hostname: ${SERVER_NAME}
    depends_on:
      - stubby
      - dnscrypt
    ports:
      - "53:53/udp"
      - "53:53/tcp"
      - "8080:80/tcp"
    environment:
      TZ: ${TZ}
      VIRTUAL_HOST: ${SERVER_NAME}
      PROXY_LOCATION: ${SERVER_NAME}
      FTLCONF_LOCAL_IPV4: ${SERVER_IP}
      WEBPASSWORD: ${PIHOLE_WEB_PASSWORD}
      PIHOLE_DNS_: 'stubby.pihole_dns#8053;dnscrypt-proxy.pihole_dns#5053'
      CACHE_SIZE: ${CACHE_SIZE}
      DNS_BOGUS_PRIV: ${DNS_BOGUS_PRIV}
      DNS_FQDN_REQUIRED: ${DNS_FQDN_REQUIRED}
      DNSMASQ_LISTENING: ${DNSMASQ_LISTENING}
      DNSSEC: ${DNSSEC}
      TEMPERATUREUNIT: ${TEMPERATUREUNIT}
      REV_SERVER: ${REV_SERVER}
      REV_SERVER_DOMAIN: ${REV_SERVER_DOMAIN}
      REV_SERVER_TARGET: ${REV_SERVER_TARGET}
      REV_SERVER_CIDR: ${REV_SERVER_CIDR}
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    networks:
      dns:
        ipv4_address: ${CONTAINER_NET}.2
    restart: always

  stubby:
    image: ${stubby_image}
    container_name: stubby
    volumes:
      - ${STUBBY_CONF}:/opt/stubby/etc/stubby/stubby.yml:ro
    networks:
      dns:
        ipv4_address: ${CONTAINER_NET}.3
    ports:
      - "10053:8053/udp"
    deploy:
      resources:
        limits:
          memory: 100M
    restart: always

  dnscrypt:
    image: ${dnscrypt_image}
    container_name: dnscrypt-proxy
    volumes:
      - ${DNSCRYPT_CONF}:/config/dnscrypt-proxy.toml:ro
    networks:
      dns:
        ipv4_address: ${CONTAINER_NET}.4
    ports:
      - "20053:5053/udp"
    healthcheck:
      test: ["CMD", "/usr/local/bin/dnsprobe", "heise.de", "0.0.0.0:5053"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 100M
    restart: always


networks:
  dns:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${CONTAINER_NET}.0/16
#
